/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import init.ActivityKey;
import init.ComboItem;
import static init.MainClass.con;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author asus
 */
public class Activity extends MyInternalFrame {

    private ActivityKey activityKey;

    /**
     * Creates new form Activity
     *
     * @param title
     * @param type
     * @param activityKey
     */
    public Activity(String title, String type, ActivityKey activityKey) {
        super(title, type);
        setMode((activityKey == null)?utils.Constants.VIEW_MODE:utils.Constants.VIEW_MODE);
        this.activityKey = activityKey;
        initComponents();
        fillCmbPurchaseDate(0);
        fillCmbLine(0);
        fillCmbCard();
        fillCmbStation();
        fillFields();
    }
    
    public Activity(String title, String type) {
        this (title, type, null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dcActivityDate = new com.toedter.calendar.JDateChooser();
        cmbActivityType = new javax.swing.JComboBox();
        cmbLine = new javax.swing.JComboBox();
        cmbStation = new javax.swing.JComboBox();
        lblCardNumber = new javax.swing.JLabel();
        lblActivityDate = new javax.swing.JLabel();
        lblCardPurchaseDate = new javax.swing.JLabel();
        lblActivityType = new javax.swing.JLabel();
        lblStation = new javax.swing.JLabel();
        lblLine = new javax.swing.JLabel();
        cmbPurchaseDate = new javax.swing.JComboBox();
        cmbCard = new javax.swing.JComboBox();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        cmbActivityType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ingoing", "Outgoing" }));

        cmbLine.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbStation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStationActionPerformed(evt);
            }
        });

        lblCardNumber.setText("Card Number");

        lblActivityDate.setText("Activity Date");

        lblCardPurchaseDate.setText("Card Purchase Date");

        lblActivityType.setText("Activity Type");

        lblStation.setText("Station");

        lblLine.setText("Line");

        cmbPurchaseDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        cmbCard.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCardActionPerformed(evt);
            }
        });

        btnSubmit.setText("Submit");

        btnCancel.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblStation)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbStation, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(lblLine)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbLine, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblCardNumber)
                                .addComponent(lblActivityType)
                                .addComponent(lblCardPurchaseDate)
                                .addComponent(lblActivityDate))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbActivityType, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(0, 0, Short.MAX_VALUE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(dcActivityDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cmbCard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCardNumber)
                    .addComponent(cmbCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCardPurchaseDate)
                    .addComponent(cmbPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dcActivityDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblActivityDate))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbActivityType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblActivityType))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblStation)
                    .addComponent(cmbStation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblLine)
                    .addComponent(cmbLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubmit)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCardActionPerformed
        try {
            ComboItem cardItem = (ComboItem) cmbCard.getSelectedItem();
            int cardNumber = Integer.valueOf(cardItem.getValue());
            fillCmbPurchaseDate(cardNumber);
        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_cmbCardActionPerformed

    private void cmbStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStationActionPerformed
        try {
            ComboItem stationItem = (ComboItem) cmbStation.getSelectedItem();
            int stationID = Integer.valueOf(stationItem.getValue());
            fillCmbLine(stationID);
        } catch (NullPointerException ex) {

        }
    }//GEN-LAST:event_cmbStationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cmbActivityType;
    private javax.swing.JComboBox cmbCard;
    private javax.swing.JComboBox cmbLine;
    private javax.swing.JComboBox cmbPurchaseDate;
    private javax.swing.JComboBox cmbStation;
    private com.toedter.calendar.JDateChooser dcActivityDate;
    private javax.swing.JLabel lblActivityDate;
    private javax.swing.JLabel lblActivityType;
    private javax.swing.JLabel lblCardNumber;
    private javax.swing.JLabel lblCardPurchaseDate;
    private javax.swing.JLabel lblLine;
    private javax.swing.JLabel lblStation;
    // End of variables declaration//GEN-END:variables

    private void fillFields() {
        PreparedStatement st;
        ResultSet rs;
        try {
            st = con.prepareStatement("SELECT A.*, S.name FROM tblActivity As A "
                    + "join tblStation As S on A.stationID = S.ID WHERE "
                    + "A.cardNumber = ? and A.cardPurchaseDate = ? and A.activityDate = ?");
            st.setInt(1, this.activityKey.getCard().getNumber());
            String myDate = "1951-03-14";
            st.setString(2, myDate);
            st.setString(3, myDate);
            rs = st.executeQuery();

            rs.next();
            for (int i = 1 ; i < cmbCard.getItemCount(); i++){
                ComboItem item = (ComboItem)cmbCard.getItemAt(i);
                if (item.getValue().equals(rs.getString("cardNumber")))
                    cmbCard.setSelectedIndex(i);
            }
            
            for (int i = 1 ; i < cmbPurchaseDate.getItemCount(); i++){
                ComboItem item = (ComboItem)cmbPurchaseDate.getItemAt(i);
                if (item.getValue().equals(rs.getString("cardPurchaseDate")))
                    cmbPurchaseDate.setSelectedIndex(i);
            }
            
            for (int i = 1 ; i < cmbStation.getItemCount(); i++){
                ComboItem item = (ComboItem)cmbStation.getItemAt(i);
                if (item.getLabel().equals(rs.getString("name")))
                    cmbStation.setSelectedIndex(i);
            }
            
            for (int i = 1 ; i < cmbLine.getItemCount(); i++){
                ComboItem item = (ComboItem)cmbLine.getItemAt(i);
                if (item.getValue().equals(rs.getString("lineName")))
                    cmbLine.setSelectedIndex(i);
            }
            cmbActivityType.setSelectedItem((rs.getString("activityType").equals("I"))?"Ingoing":"Outgoing");
            dcActivityDate.setDate(rs.getDate("activityDate"));

        } catch (SQLException ex) {
            Logger.getLogger(Activity.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbCard() {
        Statement s;
        ResultSet rs;
        try {
            s = con.createStatement();
            rs = s.executeQuery("SELECT C.number FROM tblCard As C");
            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("number"), rs.getString("number")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbCard.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Activity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbPurchaseDate(int cardNumber) {
        PreparedStatement st;
        ResultSet rs;
        try {
            if (cardNumber == 0) {
                // show all purchase dates
                st = con.prepareStatement("SELECT purchaseDate FROM tblCard");
            } else {
                st = con.prepareStatement("SELECT C.purchaseDate FROM tblCard As C WHERE C.number = ?");
                st.setInt(1, cardNumber);
            }
            rs = st.executeQuery();

            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("purchaseDate"), rs.getString("purchaseDate")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbPurchaseDate.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Activity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbStation() {
        Statement s;
        ResultSet rs;
        try {
            s = con.createStatement();
            rs = s.executeQuery("SELECT ID, name FROM tblStation");
            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("ID"), rs.getString("name")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbStation.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Activity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbLine(int stationID) {
        PreparedStatement st;
        ResultSet rs;
        try {
            if (stationID == 0) {
                // show all lines
                st = con.prepareStatement("SELECT lineName FROM tblStationInLine");
            } else {
                st = con.prepareStatement("SELECT SIL.lineName FROM tblStationInLine "
                        + "As SIL WHERE SIL.stationID = ?");
                st.setInt(1, stationID);
            }
            rs = st.executeQuery();

            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("lineName"), rs.getString("lineName")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbLine.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Activity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

}
