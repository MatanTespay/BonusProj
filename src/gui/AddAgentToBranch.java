/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import init.ComboItem;
import init.MainClass;

import javax.swing.JOptionPane;

import utils.HelperClass;
import core.Branch;
import exceptions.ConnectAgentToBranchExeption;

/**
 * The class represents the screen which enable users to connect {@link core.Agent }  to 
 * 
 * {@link core.Branch }
 * 

 * @author Matan
 */
public class AddAgentToBranch extends MyInternalFrame {

    /**
     * Creates new form AddAgentToBranch
     *
     * @param title
     * @param type
     */
    public AddAgentToBranch(String title, String type) {
        super(title, type);
        initComponents();
        fillCbAgents();
        btnOk.setToolTipText(utils.Constants.saveButtonToolTip);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        CbEmployees = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        cbBranches = new javax.swing.JComboBox();
        btnOk = new javax.swing.JButton();

        jLabel1.setText("Select Agent :");

        CbEmployees.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbEmployeesActionPerformed(evt);
            }
        });

        jLabel2.setText("Select Branch:");

        btnOk.setText("Submit");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(CbEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(cbBranches, 0, 102, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CbEmployees, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cbBranches, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addComponent(btnOk)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    * @exception {@link exceptions.ConnectAgentToBranchExeption}}
    */
    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        if(cbBranches.getModel().getSize() <= 0 || CbEmployees.getModel().getSize() <= 0){
            shoMissingDataMsg("Branches or employees are missing");
            return;
        }
            
        
        int branchNum = Integer.parseInt((String)((ComboItem) cbBranches.getSelectedItem()).getKey());
        int agentNum = Integer.parseInt((String)((ComboItem) CbEmployees.getSelectedItem()).getKey());
        try {
            MainClass.getIfly().connectAgentToBranch(agentNum, branchNum);
            long num = branchNum;
            HelperClass.fillBranchesComBo(this, cbBranches, num);
            JOptionPane.showInternalConfirmDialog(this, "Saved changes", "Confirmation", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
            setIflyState(false);
        } catch (ConnectAgentToBranchExeption ex) {
            JOptionPane.showInternalConfirmDialog(this, ex.getMessage(), "Error", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void CbEmployeesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbEmployeesActionPerformed
        // TODO add your handling code here:
        if(CbEmployees.getModel().getSize() <= 0)
            return;
        
        int agentId = Integer.parseInt((String)((ComboItem)CbEmployees.getSelectedItem()).getKey());
        try {
            Branch branchToremove = MainClass.getIfly().getBranchByAgentID(agentId);
            if(branchToremove != null)
            HelperClass.fillBranchesComBo(this, cbBranches, branchToremove.getbranchNumber());
            else
            HelperClass.fillBranchesComBo(this, cbBranches, null); 
        } catch (Exception e) {
        }
    }//GEN-LAST:event_CbEmployeesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox CbEmployees;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox cbBranches;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    /**
     * populates the {@link #CbEmployees}
     */
    private void fillCbAgents() {

        Long Number;
        Number = HelperClass.fillAgentCombo(this, CbEmployees);

        fillCbBranches(Number);               
        
    }
    
    
    /**
     * populates the {@link #cbBranches}
     */
    private void fillCbBranches(Long branchToremove) {
        HelperClass.fillBranchesComBo(this, cbBranches, branchToremove);
    }
}
