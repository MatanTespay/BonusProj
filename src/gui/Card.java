/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import init.CardKey;
import init.ComboItem;
import static init.MainClass.con;
import init.MyTableModel;
import java.io.File;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.ListSelectionModel;

/**
 *
 * @author asus
 */
public class Card extends MyInternalFrame {

    private final CardKey cardkey;
    private JFileChooser picFileChooser;
    private final String[] programColumns = {"#","Zone","Length"};;
    /**
     * Creates new form Card
     *
     * @param title
     * @param type
     * @param cardkey
     */
    public Card(String title, String type, CardKey cardkey) {
        initComponents();
        this.cardkey = cardkey;
        fillCmbCard();
        fillCmbZone();
        fillCmbLength();
        fillCmbPurchaseDate(0);
        tblPrograms.setRowSelectionAllowed(true);
        tblPrograms.setColumnSelectionAllowed(false);
        tblPrograms.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCardNumber = new javax.swing.JLabel();
        lblPurchaseDate = new javax.swing.JLabel();
        cmbCard = new javax.swing.JComboBox();
        cmbType = new javax.swing.JComboBox();
        cmbPurchaseDate = new javax.swing.JComboBox();
        lblType = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPrograms = new javax.swing.JTable();
        lblPrograms = new javax.swing.JLabel();
        lblPicture = new javax.swing.JLabel();
        btnSubmit = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        lblBrowseImage = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        cmbLength = new javax.swing.JComboBox();
        lblZone = new javax.swing.JLabel();
        lblLength = new javax.swing.JLabel();
        cmbZone = new javax.swing.JComboBox();
        btnRemove = new javax.swing.JButton();

        lblCardNumber.setText("Card Number");

        lblPurchaseDate.setText("Purchase Date");

        cmbCard.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCardActionPerformed(evt);
            }
        });

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Paper", "Oyster" }));
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        cmbPurchaseDate.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblType.setText("Type");

        tblPrograms.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblPrograms);

        lblPrograms.setText("Programs:");

        btnSubmit.setText("Submit");

        btnCancel.setText("Cancel");

        lblBrowseImage.setText("Browse Image");
        lblBrowseImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lblBrowseImageActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        cmbLength.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lblZone.setText("Zone");

        lblLength.setText("Length");

        cmbZone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnRemove.setText("Remove");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSubmit, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(btnRemove)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnAdd))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblLength)
                                            .addComponent(lblZone))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbLength, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(cmbZone, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPrograms)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblCardNumber)
                                    .addComponent(lblPurchaseDate)
                                    .addComponent(lblType))
                                .addGap(18, 18, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbCard, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cmbPurchaseDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)))
                        .addGap(99, 99, 99)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblBrowseImage, javax.swing.GroupLayout.DEFAULT_SIZE, 121, Short.MAX_VALUE)
                            .addComponent(lblPicture, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(16, 16, 16))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblCardNumber)
                            .addComponent(cmbCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPurchaseDate)
                            .addComponent(cmbPurchaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblType)))
                    .addComponent(lblPicture, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblBrowseImage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPrograms)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblZone))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblLength))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAdd)
                            .addComponent(btnRemove)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnSubmit))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCardActionPerformed
        try {
            ComboItem cardItem = (ComboItem) cmbCard.getSelectedItem();
            int cardNumber = Integer.valueOf(cardItem.getValue());
            fillCmbPurchaseDate(cardNumber);
        } catch (NullPointerException ex) {
        }
    }//GEN-LAST:event_cmbCardActionPerformed

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        String cardType = (String) cmbType.getSelectedItem();
        fillPrograms(cardType);
    }//GEN-LAST:event_cmbTypeActionPerformed

    private void lblBrowseImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lblBrowseImageActionPerformed
        int o = picFileChooser.showOpenDialog(this);
        if (o == JFileChooser.APPROVE_OPTION) {
            File f = picFileChooser.getSelectedFile();
            lblPicture.setIcon(new ImageIcon("" + f));
        }
    }//GEN-LAST:event_lblBrowseImageActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String cardType = String.valueOf(cmbType.getSelectedItem());
        String tableName = (cardType.equals("Paper") ? "tblPaperCardAreas" : "tblOysterCardAreas");
        int zoneNumber = Integer.valueOf(((ComboItem) cmbZone.getSelectedItem()).getValue());
        int cardLength = Integer.valueOf(((ComboItem) cmbLength.getSelectedItem()).getValue());

        PreparedStatement st;
        try {
            st = con.prepareStatement("INSERT INTO " + tableName + " VALUES (?,?,?,?)");
            st.setInt(1, cardkey.getNumber());
            st.setString(2, String.valueOf(cardkey.getPurchaseDate()));
            st.setInt(3, zoneNumber);
            st.setInt(4, cardLength);
            st.executeUpdate();
            fillPrograms(cardType);

        } catch (SQLException | NullPointerException ex) {
//            Logger.getLogger(Station.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JComboBox cmbCard;
    private javax.swing.JComboBox cmbLength;
    private javax.swing.JComboBox cmbPurchaseDate;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JComboBox cmbZone;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton lblBrowseImage;
    private javax.swing.JLabel lblCardNumber;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblPicture;
    private javax.swing.JLabel lblPrograms;
    private javax.swing.JLabel lblPurchaseDate;
    private javax.swing.JLabel lblType;
    private javax.swing.JLabel lblZone;
    private javax.swing.JTable tblPrograms;
    // End of variables declaration//GEN-END:variables

    private void fillCmbCard() {
        Statement s;
        ResultSet rs;
        try {
            s = con.createStatement();
            rs = s.executeQuery("SELECT C.number FROM tblCard As C");
            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("number"), rs.getString("number")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbCard.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Card.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbPurchaseDate(int cardNumber) {
        PreparedStatement st;
        ResultSet rs;
        try {
            if (cardNumber == 0) {
                // show all purchase dates
                st = con.prepareStatement("SELECT purchaseDate FROM tblCard");
            } else {
                st = con.prepareStatement("SELECT C.purchaseDate FROM tblCard As C WHERE C.number = ?");
                st.setInt(1, cardNumber);
            }
            rs = st.executeQuery();

            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("purchaseDate"), rs.getString("purchaseDate")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbPurchaseDate.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Activity.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillPrograms(String cardType) {
        PreparedStatement st;
        ResultSet rs;
        try {
            String tableName = (cardType.equals("Paper") ? "tblPaperCardAreas" : "tblOysterCardAreas");
            st = con.prepareStatement("SELECT * FROM " + tableName + " As PCA "
                    + "JOIN tblCardLengths As CL on PCA.cardLength = CL.lengthDescription "
                    + "WHERE PCA.cardNumber = ? and PCA.cardPurchaseDate = ?");
            st.setInt(1, cardkey.getNumber());
            st.setString(2, String.valueOf(cardkey.getPurchaseDate()));
            rs = st.executeQuery();
            ArrayList<Object[]> rows = new ArrayList();
            int i = 0;
            while (rs.next()) {
                Object[] row = {i, rs.getString("zoneNumber"), rs.getString("lengthDescription")};
                rows.add(row);
                i++;
            }
            MyTableModel tableModel = new MyTableModel(programColumns, rows, null);
            tblPrograms.setModel(tableModel);

        } catch (SQLException ex) {
            Logger.getLogger(Card.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbZone() {
        Statement s;
        ResultSet rs;
        try {
            s = con.createStatement();
            rs = s.executeQuery("SELECT * FROM tblZone");
            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("number"), rs.getString("number")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbCard.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Card.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbLength() {
        Statement s;
        ResultSet rs;
        try {
            s = con.createStatement();
            rs = s.executeQuery("SELECT * FROM tblCardLengths");
            ArrayList<ComboItem> items = new ArrayList<>();
            while (rs.next()) {
                items.add(new ComboItem(rs.getString("cardLength"), rs.getString("lengthDescription")));
            }
            Collections.sort(items);
            items.add(0, null);
            cmbCard.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
        } catch (SQLException ex) {
            Logger.getLogger(Card.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
