/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import utils.QueryCombobox;
import utils.Column;
import utils.CostumeTableModel;
import init.ComboItem;
import init.InputValidator;
import static init.MainClass.con;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JInternalFrame;
import static utils.Constants.ADD_MODE;
import static utils.Constants.EDIT_MODE;
import static utils.Constants.OVERGROUND;
import static utils.Constants.UNDERGROUND;
import static utils.HelperClass.setTableProperties;

/**
 *
 * @author asus
 */
public class Line extends MyInternalFrame {

    private String lineName;
    private int foundedYear;
    private boolean type;
    private double length;
    private String color;
    private PreparedStatement userStatement;

    /**
     * Creates new form Line
     *
     * @param title
     * @param type
     * @param lineName
     */
    public Line(String title, String type, String lineName) {
        super(title, type);
        setMode(EDIT_MODE);
        this.lineName = lineName;
        setVariables();
        buildForm();
        setDefaults();
    }

    public Line(String title, String type, String lineName, JInternalFrame parent) {
        this(title, type, lineName);
        this.parent = parent;
    }

    public Line(String title, String type) {
        super(title, type);
        setMode(ADD_MODE);
        buildForm();
    }

    private void buildForm() {
        try {
            initComponents();
            PreparedStatement getAllColors = con.prepareStatement("SELECT name FROM tblLineColor");
            PreparedStatement getAllStations = con.prepareStatement("SELECT ID, name FROM tblStation");

            setStationTblModel(); /*must do this BEFORE setting the comboBoxModel*/

            setTableProperties(tblStations);

            cmbColor.setModel(new QueryCombobox(cmbColor, String.class, getAllColors));
            cmbStation.setModel(new QueryCombobox(cmbStation, Integer.class, getAllStations, (CostumeTableModel) tblStations.getModel(), 0, 1));

            setActiveness();

            super.validators = new ArrayList<InputValidator>() {
                {
                    add(new InputValidator(tfLength, utils.InputType.DOUBLE, null, null));
                    add(new InputValidator(tfName, utils.InputType.TEXT, null, null));
                }
            };
        } catch (SQLException ex) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfLength = new javax.swing.JTextField();
        lblType = new javax.swing.JLabel();
        cmbType = new javax.swing.JComboBox();
        tfName = new javax.swing.JTextField();
        lbName = new javax.swing.JLabel();
        lblFoundation = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStations = new javax.swing.JTable();
        lblStations = new javax.swing.JLabel();
        lblLength = new javax.swing.JLabel();
        lblKm = new javax.swing.JLabel();
        lblColor = new javax.swing.JLabel();
        btnViewStation = new javax.swing.JButton();
        btnRemoveStation = new javax.swing.JButton();
        cmbColor = new javax.swing.JComboBox();
        cmbStation = new javax.swing.JComboBox();
        lblAddStations = new javax.swing.JLabel();
        ychFoundationYear = new com.toedter.calendar.JYearChooser();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        tfLength.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfLengthActionPerformed(evt);
            }
        });

        lblType.setText("Type");

        cmbType.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Underground", "Overground" }));
        cmbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbTypeActionPerformed(evt);
            }
        });

        tfName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNameActionPerformed(evt);
            }
        });

        lbName.setText("Line Name");

        lblFoundation.setText("Foundation Year");

        tblStations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblStations.setColumnSelectionAllowed(true);
        tblStations.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblStations);
        tblStations.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        lblStations.setText("Stations:");

        lblLength.setText("Length");

        lblKm.setText("km");

        lblColor.setText("Color");

        btnViewStation.setText("View Station");
        btnViewStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewStationActionPerformed(evt);
            }
        });

        btnRemoveStation.setText("Remove Station");
        btnRemoveStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveStationActionPerformed(evt);
            }
        });

        cmbColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Underground", "Overground" }));
        cmbColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbColorActionPerformed(evt);
            }
        });

        cmbStation.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Underground", "Overground" }));
        cmbStation.setName(""); // NOI18N
        cmbStation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbStationActionPerformed(evt);
            }
        });

        lblAddStations.setText("Add");

        ychFoundationYear.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                ychFoundationYearPropertyChange(evt);
            }
        });

        btnSave.setText("Save");

        btnCancel.setText("Cancel");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 406, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(btnViewStation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRemoveStation, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblAddStations)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                                .addComponent(cmbStation, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblStations)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblColor)
                                    .addComponent(lbName))
                                .addGap(40, 40, 40))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFoundation)
                                .addGap(7, 7, 7)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(ychFoundationYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbColor, 0, 85, Short.MAX_VALUE)
                            .addComponent(tfName, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lblType)
                                .addGap(20, 20, 20))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfLength, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblKm))
                            .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(184, 184, 184))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblType)
                    .addComponent(cmbType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbName))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfLength, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLength)
                    .addComponent(lblKm)
                    .addComponent(cmbColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblColor))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ychFoundationYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFoundation))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(lblStations)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnViewStation)
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbStation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblAddStations))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnRemoveStation)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewStationActionPerformed
        int stationID = Integer.parseInt(tblStations.getModel().getValueAt(tblStations.getSelectedRow(), 0).toString());
        Station newFrame = new Station(evt.getActionCommand(), getSelectedUserType(), stationID, this);
        openChildFrame(newFrame);
    }//GEN-LAST:event_btnViewStationActionPerformed

    private void btnRemoveStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveStationActionPerformed
        int stationId;

        try {
            Object value = tblStations.getModel().getValueAt(tblStations.getSelectedRow(), 0);
            if (value != null) {
                stationId = Integer.parseInt(value.toString());
            userStatement = con.prepareStatement("DELETE FROM tblStationInLine WHERE "
                        + "stationID = ? AND  lineName = ?");
                userStatement.setInt(1, stationId);
                userStatement.setString(2, lineName);
                userStatement.addBatch();

                ((CostumeTableModel) tblStations.getModel()).removeRow(stationId);
            }
        } catch (SQLException ex) {
            Logger.getLogger(Station.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnRemoveStationActionPerformed

    private void cmbStationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbStationActionPerformed
        ComboItem selectedStation = (ComboItem) ((QueryCombobox) cmbStation.getModel()).getSelectedItem();
        Integer stationID = Integer.valueOf(selectedStation.getKey().toString());
        ((CostumeTableModel) tblStations.getModel()).addRow(stationID);
    }//GEN-LAST:event_cmbStationActionPerformed

    private void tfNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNameActionPerformed
        this.lineName = tfName.getText();
    }//GEN-LAST:event_tfNameActionPerformed

    private void cmbColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbColorActionPerformed
        ComboItem colorItem = (ComboItem) cmbColor.getModel().getSelectedItem();
        this.color = (String) colorItem.getKey();
    }//GEN-LAST:event_cmbColorActionPerformed

    private void ychFoundationYearPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_ychFoundationYearPropertyChange
        this.foundedYear = ychFoundationYear.getYear();
    }//GEN-LAST:event_ychFoundationYearPropertyChange

    private void cmbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTypeActionPerformed
        String strType = (String) cmbType.getModel().getSelectedItem();
        this.type = (strType.equals("Overground")) ? OVERGROUND : UNDERGROUND;
    }//GEN-LAST:event_cmbTypeActionPerformed

    private void tfLengthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfLengthActionPerformed
        this.length = Double.valueOf(tfLength.getText());
    }//GEN-LAST:event_tfLengthActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnRemoveStation;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnViewStation;
    private javax.swing.JComboBox cmbColor;
    private javax.swing.JComboBox cmbStation;
    private javax.swing.JComboBox cmbType;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbName;
    private javax.swing.JLabel lblAddStations;
    private javax.swing.JLabel lblColor;
    private javax.swing.JLabel lblFoundation;
    private javax.swing.JLabel lblKm;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblStations;
    private javax.swing.JLabel lblType;
    private javax.swing.JTable tblStations;
    private javax.swing.JTextField tfLength;
    private javax.swing.JTextField tfName;
    private com.toedter.calendar.JYearChooser ychFoundationYear;
    // End of variables declaration//GEN-END:variables

    private void setStationTblModel() {
        ArrayList<Column> cols = new ArrayList<>();
        cols.add(new Column("ID", "ID", Integer.class));
        cols.add(new Column("Name", "Name", String.class));
        cols.add(new Column("Platforms", "platformNum", Integer.class));
        cols.add(new Column("Kiosk", "Kiosk", Boolean.class));
        cols.add(new Column("Zone", "zoneNumber", Integer.class));
        try {
            PreparedStatement getAllStations = con.prepareStatement("Select * From tblStationInLine "
                    + "As SIL join tblStation As S on SIL.stationID = S.ID WHERE SIL.lineName = ?");
            getAllStations.setString(1, lineName);
            PreparedStatement addStation = con.prepareStatement("Select * From tblStation WHERE ID = ?");

            utils.CostumeTableModel stationTblModel = new utils.CostumeTableModel(cols, addStation, getAllStations);
            tblStations.setModel(stationTblModel);
        } catch (SQLException ex) {

        }
    }

    private void setVariables() {
        PreparedStatement st;
        ResultSet rs;
        try {
            st = con.prepareStatement("Select * From tblLine As L join tblLineColor "
                    + "As LC on L.name = LC.lineName WHERE L.name = ?");
            st.setString(1, lineName);
            rs = st.executeQuery();

            rs.next();
            this.color = rs.getString(5)/*color name*/;
            this.foundedYear = rs.getInt("foundedYear");
            this.length = rs.getDouble("lineLength");
            this.lineName = rs.getString("name");
            this.type = (rs.getString("lineType").equals("O")) ? OVERGROUND : UNDERGROUND;

        } catch (SQLException ex) {
            Logger.getLogger(Line.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void setDefaults() {
        tfName.setText(this.lineName);
        cmbColor.getModel().setSelectedItem(color);
        ychFoundationYear.setYear(this.foundedYear);
        cmbType.setSelectedItem((this.type == OVERGROUND) ? "Overground" : "Underground");
        tfLength.setText(String.valueOf(this.length));
    }

    private void setActiveness() {
        if (getMode() == ADD_MODE) {
            tfName.setEnabled(true);
        } else {
            // edit mode
            tfName.setEnabled(false);
        }
    }
}
