/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import init.MethodInterface;
import init.MyTableModel;

import java.awt.Color;
import java.util.ArrayList;

import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import utils.HelperClass;

/**
 *The class represents the phone information which included in the relevant screens.

 * @author Matan
 */
public class PhonePanel extends javax.swing.JPanel implements MethodInterface {

    int rowCount;
    String[] columnNames = {"#",
        "Number"};
    String selectedPreFix;
    int rowIdx = -1;
    MyTableModel tableModel;
    /**
     * Creates new form NewJPanel
     */
    public PhonePanel() {
        initComponents();
        rowCount = 1;
        fillPhonePrefix();
        tableModel = new MyTableModel(columnNames, new ArrayList(), null);

        tblPhones.setModel(tableModel);
        btnRemove.setEnabled(false);
        HelperClass.aligmentCell(tblPhones);

        ListSelectionModel selectionModel = tblPhones.getSelectionModel();
        selectionModel.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                if (!e.getValueIsAdjusting()) {
                    phoneSelection();
                }
            }
        });
    }

    private void phoneSelection() {
        rowIdx = tblPhones.getSelectedRow();
        btnRemove.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        btnAddRow = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhones = new javax.swing.JTable();
        txtPhone = new javax.swing.JTextField();
        cbPhones = new javax.swing.JComboBox();
        lblPhoneErr = new javax.swing.JLabel();
        btnRemove = new javax.swing.JButton();

        jLabel7.setText("Phone Numbers:");

        btnAddRow.setText("Add");
        btnAddRow.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRowActionPerformed(evt);
            }
        });

        tblPhones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPhones.setColumnSelectionAllowed(true);
        tblPhones.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblPhones);
        tblPhones.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);

        cbPhones.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPhonesActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPhoneErr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(cbPhones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 1, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(btnRemove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddRow))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbPhones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblPhoneErr, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddRow)
                    .addComponent(btnRemove))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRowActionPerformed
        // TODO add your handling code here:
        if (cbPhones.getModel().getSize() > 0 && checkPhone(txtPhone.getText())) {
            MyTableModel model = (MyTableModel) tblPhones.getModel();
            String phone = cbPhones.getSelectedItem().toString();
            phone += txtPhone.getText();
            model.addRow(new Object[]{rowCount, phone});
            rowCount++;
            txtPhone.setText("");
        }

    }//GEN-LAST:event_btnAddRowActionPerformed

    private void cbPhonesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPhonesActionPerformed
        // TODO add your handling code here:
        if (cbPhones.getModel().getSize() > 0) {
            selectedPreFix = cbPhones.getSelectedItem().toString();
        }
    }//GEN-LAST:event_cbPhonesActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
//        // TODO add your handling code here:
//        int i =tblPhones.getSelectedRow();
//        
//        tableModel.removeRow(i);
        for (int i = 0; i < tblPhones.getRowCount();i++) {
            if (i == rowIdx) {
             MyTableModel model = (MyTableModel) tblPhones.getModel();
              model.removeRow(i);
              btnRemove.setEnabled(false);
              tblPhones.clearSelection();
              rowCount = tblPhones.getRowCount()+1;
                break;
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * chekes phone
     * @param s
     * @return true if value is validate otherwise false
     */
    public boolean checkPhone(String s) {
        boolean result = true;
        lblPhoneErr.setText("");

        if (s.length() != 0) {
            String pattern = "\\d{7}";
            result = HelperClass.isPhoneNumber(s, pattern);
            if (result) {
                lblPhoneErr.setText("");

            } else {
                lblPhoneErr.setText("Enter 7 digit number");
                lblPhoneErr.setForeground(Color.red);
            }
        } else {
            lblPhoneErr.setText("Value cant be empty");
            lblPhoneErr.setForeground(Color.red);
            result = false;
        }

        return result;
    }

    private boolean validatePhone(String s, DocumentEvent.EventType type) {
    	if(s != null && s.trim().length() > 0)
        return true;
    	
    	return false;
    }

    /**
     *fill the {@link #cbPhones}}
     */
    private void fillPhonePrefix() {
        cbPhones.setModel(new javax.swing.DefaultComboBoxModel(utils.Constants.PHONE_PREFIX));
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRow;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox cbPhones;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPhoneErr;
    private javax.swing.JTable tblPhones;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables

    @Override
    public void saveChanges() {
    }

    @Override
    public boolean checkField(DocumentEvent e) {
        if (e.getDocument() == txtPhone.getDocument()) {

            return validatePhone(txtPhone.getText(), e.getType());

        }

        return true;
    }

    public JTable getTblPhones() {
        return tblPhones;
    }

    public JLabel getLblPhoneErr() {
        return lblPhoneErr;
    }

    public boolean isTableEmpty() {
        int count = this.tblPhones.getModel().getRowCount();
        if (count == 0) {
            this.lblPhoneErr.setText("Please add phones");
            lblPhoneErr.setForeground(Color.red);
            return true;
        }
        return false;
    }

}
