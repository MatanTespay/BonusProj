/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import init.ComboItem;
import init.CustomDocumentListener;
import init.MainClass;
import init.MethodInterface;

import java.awt.Color;
import java.util.AbstractMap;
import java.util.Map;

import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;

import utils.E_Cities;
import utils.HelperClass;
import core.Customer;

/**
 *
  *The class represents the screen which enable users to update the {@link core.Address} for the {@link core.Customer}
 
 * @author Matan
 */
public class UpdateCustomerDetails extends MyInternalFrame implements MethodInterface{

    AbstractMap.SimpleEntry selectedCustomer ;

    /**
     * Creates new form UpdateCustomerDetails
     */
    public UpdateCustomerDetails(String title, String type) {
        super(title, type, null);
        initComponents();
        
        fillData();
        txtStreet.getDocument().addDocumentListener(new CustomDocumentListener(this));
        txtHouseNumber.getDocument().addDocumentListener(new CustomDocumentListener(this));
        btnOK.setToolTipText(utils.Constants.saveButtonToolTip);
    }

    

    
    /* (non-Javadoc)
     * check values in the fileds
     * @see init.MethodInterface#checkField(javax.swing.event.DocumentEvent)
     */
    @Override
	public boolean checkField(DocumentEvent e) {
        boolean result = true;
        if (e.getDocument() == txtStreet.getDocument()) {
            if (txtStreet.getText().length() == 0) {
                errStreet.setText("value cant be empty");
                result = false;
            } else {
                result = HelperClass.isOnlyLetters(txtStreet.getText());
                errStreet.setText("Value cant have numbers");
            }

            if (!result) {
                errStreet.setForeground(Color.red);
                btnOK.setEnabled(false);

            } else {
                errStreet.setText("");
                errStreet.setForeground(Color.red);
                btnOK.setEnabled(true);
            }
        } else if (e.getDocument() == txtHouseNumber.getDocument()) {
            if (txtHouseNumber.getText().length() == 0) {
                errHouse.setText("value cant be empty");
                result = false;
            } else {
                result = HelperClass.isOnlyNumber(txtHouseNumber.getText());
                errHouse.setText("Only numbers");
            }

            if (!result) {
                errHouse.setForeground(Color.red);
                btnOK.setEnabled(false);
            } else {
                errHouse.setText("");
                errHouse.setForeground(Color.red);
                btnOK.setEnabled(true);
            }
        }
        return result;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtPassort = new javax.swing.JTextField();
        txtBDate = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        ComBoxAddress = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        txtcountry = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtStreet = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtHouseNumber = new javax.swing.JTextField();
        errStreet = new javax.swing.JLabel();
        errHouse = new javax.swing.JLabel();
        cbCustomers = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jLabel1.setText("Name:");

        jLabel2.setText("Passport:");

        jLabel3.setText("Birth Date:");

        jLabel4.setText("Password:");

        jLabel5.setText("E-mail:");

        jLabel6.setText("City:");

        txtName.setEditable(false);

        txtPassort.setEditable(false);

        txtBDate.setEditable(false);

        txtPassword.setEditable(false);

        txtEmail.setEditable(false);

        btnOK.setText("Submit");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        ComBoxAddress.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ComBoxAddress.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComBoxAddressActionPerformed(evt);
            }
        });

        jLabel9.setText("Country:");

        jLabel11.setText("Street:");

        jLabel12.setText("house Number:");

        errStreet.setText(" ");

        errHouse.setText(" ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(errHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(errStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel11))
                                        .addGap(9, 9, 9)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtName, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                                .addComponent(txtEmail))
                                            .addComponent(txtBDate, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(ComBoxAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel12)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(23, 23, 23)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtcountry, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtPassort, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addContainerGap(20, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtPassort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtBDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtcountry, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(ComBoxAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtStreet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(errStreet, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtHouseNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(errHouse, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOK)
                .addGap(31, 31, 31))
        );

        cbCustomers.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCustomersActionPerformed(evt);
            }
        });

        jLabel8.setText("Select Customer:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel8)
                        .addGap(26, 26, 26)
                        .addComponent(cbCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComBoxAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComBoxAddressActionPerformed
        // TODO add your handling code here:
        JComboBox cb = (JComboBox) evt.getSource();
        if(cb.getModel().getSize() <= 0)
            return;
        String city = cb.getSelectedItem().toString();
        txtcountry.setText(E_Cities.valueOf(city).getCountry());

    }//GEN-LAST:event_ComBoxAddressActionPerformed

    private void cbCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCustomersActionPerformed
        // TODO add your handling code here:
        JComboBox cb = (JComboBox) evt.getSource();
        if(cb.getModel().getSize() <= 0)
            return;
        
        ComboItem item = (ComboItem) cb.getSelectedItem();
        
        for (Map.Entry<String, Customer> tempc : MainClass.getIfly().getCustomers().entrySet()) {
            if (tempc.getKey().equals(item.getValue())) {
                selectedCustomer = new AbstractMap.SimpleEntry(tempc.getKey(), tempc.getValue());
                break;
            }
        }

        init(selectedCustomer);
    }//GEN-LAST:event_cbCustomersActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        saveChanges();
    }//GEN-LAST:event_btnOKActionPerformed

    
    /* (non-Javadoc)
     * save changes
     * @see init.MethodInterface#saveChanges()
     */
    @Override
	public void saveChanges() {
        if (selectedCustomer == null || ComBoxAddress.getModel().getSize() <= 0){
            shoMissingDataMsg("Customer informations is missing");
            return;
        }

      
        String passport = (String)selectedCustomer.getKey();
        String country = txtcountry.getText();
        E_Cities city = E_Cities.valueOf(ComBoxAddress.getSelectedItem().toString());
        String street = txtStreet.getText();
        int num = Integer.parseInt(txtHouseNumber.getText());
        try {
            if (selectedCustomer != null) {

                
                    String[] phones = ((Customer)selectedCustomer.getValue()).getCustomerAddress().getPhoneNumber();
                    boolean res = MainClass.getIfly().changeCustomerAddress(passport, country, city, street, num, phones);
                    if(res){
                        JOptionPane.showInternalConfirmDialog(this, "Saved changes", "Confirmation", JOptionPane.PLAIN_MESSAGE, JOptionPane.INFORMATION_MESSAGE);
                        setIflyState(false);
                    }
            }
        } catch (Exception e) {
            JOptionPane.showInternalConfirmDialog(this, e.getMessage(), "Error", JOptionPane.PLAIN_MESSAGE, JOptionPane.ERROR_MESSAGE);
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComBoxAddress;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox cbCustomers;
    private javax.swing.JLabel errHouse;
    private javax.swing.JLabel errStreet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtBDate;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtHouseNumber;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPassort;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtStreet;
    private javax.swing.JLabel txtcountry;
    // End of variables declaration//GEN-END:variables

    /**
     * fill data in the window
     */
    private void fillData() {

        E_Cities[] cities = utils.E_Cities.values();

        ComboItem[] items = new ComboItem[cities.length];

        for (int i = 0; i < cities.length; i++) {

            items[i] = new ComboItem(cities[i].name(), cities[i].name());
        }
        
        ComBoxAddress.setModel(new javax.swing.DefaultComboBoxModel(items));        
        ComBoxAddress.setSelectedIndex(0);

        if (!selectedUserType.equals("Customer")) {
            //txtRating.setText("" + c.getRating() + "");
            Map<String, Customer> customers = MainClass.getIfly().getCustomers();

            items = new ComboItem[customers.size()];

            //String[] cs = new String[customers.size()];
            int idx = 0;
            for (Map.Entry<String, Customer> entry : customers.entrySet()) {
                items[idx] = new ComboItem(entry.getKey(), entry.getValue().getFirstName() + " " + entry.getValue().getLastName());
                if (idx == 0) {
                    selectedCustomer =  new AbstractMap.SimpleEntry(entry.getKey(),entry.getValue());
                }

                idx++;
            }

            cbCustomers.setModel(new javax.swing.DefaultComboBoxModel(items));

        } else {
            selectedCustomer = MainClass.getUserData();
            jLabel8.setVisible(false);
            cbCustomers.setVisible(false);

        }

        init(selectedCustomer);

    }

    /**
     * set information for the given user information
     * @param user
     */
    private void init(AbstractMap.SimpleEntry user) {

        if (user != null) {

            StringBuilder sb = new StringBuilder();
            Customer c = (Customer)user.getValue();
            
            sb.append(c.getBirthDate().getDate()).append("/").append(c.getBirthDate().getMonth() + 1)
                    .append("/").append(c.getBirthDate().getYear());
            txtBDate.setText(sb.toString());
            String s = c.getEmail().toString();
            txtEmail.setText(s.substring(s.lastIndexOf("\\") + 1));

            txtName.setText(c.getFirstName() + " " + c.getLastName());
            txtPassort.setText("" + c.getPassportNumber() + "");
            txtPassword.setText("" + c.getPassword() + "");
            s = c.getCustomerAddress().getStreet();
            txtStreet.setText(s);            
            txtcountry.setText(c.getCustomerAddress().getCountry());
            int number = c.getCustomerAddress().getHouseNumber();
            txtHouseNumber.setText("" + number + "");


            ComBoxAddress.getItemCount();
            for (int j = 0; j < ComBoxAddress.getItemCount(); j++) {
                // ComboItem i = 
                if (((ComboItem) ComBoxAddress.getItemAt(j)).getLabel().equals(c.getCustomerAddress().getCity().toString())) {
                    ComBoxAddress.setSelectedIndex(j);
                }
            }
            


        }
    }

}
