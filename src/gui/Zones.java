/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import static init.MainClass.con;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Set;
import java.util.TreeSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.text.PlainDocument;
import static utils.Constants.EDIT_MODE;
import utils.InputType;
import utils.Queries;

/**
 *
 * @author asus
 */
public class Zones extends MyInternalFrame {

    /**
     * Creates new form Zones
     *
     * @param title
     * @param type
     */
    public Zones(String title, String type) {
        super(title, type);
        setMode(EDIT_MODE);
        initComponents();
        fillZones();
        fillCmbZone();

        lstZones.addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                boolean isItemSelected = lstZones.getSelectedIndex() != -1;
                btnRemove.setEnabled(isItemSelected);
                btnUpdate.setEnabled(isItemSelected);
                if (isItemSelected) {
                    tfUpdateNumber.setText(lstZones.getSelectedValue().toString());
                }

            }
        });
        if (lstZones.getModel().getSize() > 0) {
            lstZones.setSelectedIndex(0);
        }

        // set document filters to text fields
        PlainDocument updateNumberDoc = (PlainDocument) tfUpdateNumber.getDocument();
        updateNumberDoc.setDocumentFilter(new utils.MyDocFilter(InputType.DIGIT));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pAddZone = new javax.swing.JPanel();
        lblAddNumber = new javax.swing.JLabel();
        cmbZone = new javax.swing.JComboBox();
        btnAdd = new javax.swing.JButton();
        pExistingZone = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstZones = new javax.swing.JList();
        pEditZone = new javax.swing.JPanel();
        lblEditNumber = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        tfUpdateNumber = new javax.swing.JTextField();
        btnRemove = new javax.swing.JButton();

        pAddZone.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Zone"));

        lblAddNumber.setText("Number");

        cmbZone.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pAddZoneLayout = new javax.swing.GroupLayout(pAddZone);
        pAddZone.setLayout(pAddZoneLayout);
        pAddZoneLayout.setHorizontalGroup(
            pAddZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pAddZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAddNumber)
                .addGap(18, 18, 18)
                .addComponent(cmbZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(92, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAddZoneLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pAddZoneLayout.setVerticalGroup(
            pAddZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pAddZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pAddZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddNumber)
                    .addComponent(cmbZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pExistingZone.setBorder(javax.swing.BorderFactory.createTitledBorder("Exisiting Zones"));

        lstZones.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(lstZones);

        javax.swing.GroupLayout pExistingZoneLayout = new javax.swing.GroupLayout(pExistingZone);
        pExistingZone.setLayout(pExistingZoneLayout);
        pExistingZoneLayout.setHorizontalGroup(
            pExistingZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pExistingZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pExistingZoneLayout.setVerticalGroup(
            pExistingZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pExistingZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        pEditZone.setBorder(javax.swing.BorderFactory.createTitledBorder("Edit Zone"));

        lblEditNumber.setText("Number");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnRemove.setText("Remove");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pEditZoneLayout = new javax.swing.GroupLayout(pEditZone);
        pEditZone.setLayout(pEditZoneLayout);
        pEditZoneLayout.setHorizontalGroup(
            pEditZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pEditZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEditZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pEditZoneLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemove))
                    .addGroup(pEditZoneLayout.createSequentialGroup()
                        .addComponent(lblEditNumber)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfUpdateNumber)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addContainerGap())
        );
        pEditZoneLayout.setVerticalGroup(
            pEditZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pEditZoneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pEditZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEditNumber)
                    .addComponent(tfUpdateNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pEditZoneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnRemove))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pExistingZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pEditZone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pAddZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pExistingZone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pAddZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(pEditZone, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed

        int choice = JOptionPane.showInternalOptionDialog(this,
                "Adding a zone may result consistency issues.\n"
                + "Are yaur sure you want to proceed?",
                "Bummer!", JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE, null, null, null);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }

        try {

            short zoneNumber = Short.parseShort(cmbZone.getSelectedItem().toString());

            PreparedStatement st = con.prepareStatement(Queries.INSERT_ZONE);
            st.setShort(1, zoneNumber);
            st.executeUpdate();

            fillZones();
            fillCmbZone();

        } catch (SQLException | NullPointerException ex) {
            Logger.getLogger(Zones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed

        try {

            short zoneNumber = Short.parseShort(lstZones.getSelectedValue().toString());
            PreparedStatement st = con.prepareStatement(Queries.DELETE_ZONE);
            st.setShort(1, zoneNumber);
            st.executeUpdate();

            fillZones();
            fillCmbZone();

        } catch (SQLException ex) {
            if (ex.getErrorCode() == 547) {
                JOptionPane.showInternalMessageDialog(this,
                        "The zone can not be deleted since "
                        + "it is already in use",
                        "Bummer!",
                        JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed

        int choice = JOptionPane.showInternalOptionDialog(this,
                "Updating a zone may result consistency issues.\n"
                + "Are yaur sure you want to proceed?",
                "Bummer!", JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE, null, null, null);
        if (choice == JOptionPane.NO_OPTION) {
            return;
        }

        try {

            short newZoneNumber = Short.parseShort(tfUpdateNumber.getText());
            short oldZoneNumber = Short.parseShort(lstZones.getSelectedValue().toString());

            PreparedStatement st = con.prepareStatement(Queries.UPDATE_ZONE);
            st.setShort(1, newZoneNumber);
            st.setShort(2, oldZoneNumber);

            st.executeUpdate();

            fillZones();
            fillCmbZone();

        } catch (SQLException ex) {
            Logger.getLogger(Station.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbZone;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAddNumber;
    private javax.swing.JLabel lblEditNumber;
    private javax.swing.JList lstZones;
    private javax.swing.JPanel pAddZone;
    private javax.swing.JPanel pEditZone;
    private javax.swing.JPanel pExistingZone;
    private javax.swing.JTextField tfUpdateNumber;
    // End of variables declaration//GEN-END:variables

    private void fillZones() {

        try {

            Statement s = con.createStatement();
            ResultSet rs = s.executeQuery(Queries.SELECT_ALL_ZONES);

            Set<Short> items = new TreeSet<>();
            while (rs.next()) {
                items.add(rs.getShort("number"));
            }

            DefaultListModel listModel = new DefaultListModel();
            for (Short ci : items) {
                listModel.addElement(ci);
            }
            lstZones.setModel(listModel);

        } catch (SQLException ex) {
            Logger.getLogger(Zones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void fillCmbZone() {
        ResultSet rs;
        try {
            Statement st = con.createStatement();
            rs = st.executeQuery(Queries.SELECT_UNUSED_ZONES);

            ArrayList<Short> items = new ArrayList<>();
            while (rs.next()) {
                items.add(rs.getShort("number"));
            }
//            if (!items.isEmpty()) {
            cmbZone.setModel(new javax.swing.DefaultComboBoxModel(items.toArray()));
//            }
        } catch (SQLException ex) {
            Logger.getLogger(Zones.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
