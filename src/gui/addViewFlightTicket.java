/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import init.ComboItem;
import init.MainClass;

import java.awt.Dimension;
import java.awt.Rectangle;

import javax.swing.JDesktopPane;
import javax.swing.JInternalFrame;

import utils.HelperClass;
import core.Customer;
import core.Flight;
import core.Order;

/**
 *
  *The class represents the screen which enable users to select the information given to the {@link gui.ViewFlightTickets} 
 * @author Matan
 */
/**
 * @author Matan
 *
 */
/**
 * @author Matan
 *
 */
public class addViewFlightTicket extends MyInternalFrame {

    JInternalFrame parent;
    int fligthNumber, orderNumber;
    String customerNumber;
    Flight flight;
    Order order;
    int totalSeat, left;
    String cmd = "ignore";

    /**
     * Creates new form addFlightTicket
     *
     * @param title
     * @param type
     */
    public addViewFlightTicket(String title, String type) {
        super(title, type);
        initComponents();
        initData();

    }

    /**
     * Creates new form addFlightTicket

     * @param title
     * @param type
     * @param parent
     * @param fligthNumber
     * @param orderNumber
     * @param customerNumber
     */
    public addViewFlightTicket(String title, String type,
            JInternalFrame parent, int fligthNumber, int orderNumber, String customerNumber) {
        super(title, type);
        initComponents();
        this.parent = parent;
        this.fligthNumber = fligthNumber;
        this.customerNumber = customerNumber;
        this.orderNumber = orderNumber;

        initData();
        if (fligthNumber > 0 && orderNumber > 0 && customerNumber != null) {
            cbCustomers.setEnabled(false);
            cbOrderNum.setEnabled(false);
            cbFligthNum.setEnabled(false);
        }
    }

    
    /**
     * fill all fields with data
     */
    private void initData() {
        centerFrame();
        cbCustomers.setActionCommand(cmd);
        cbOrderNum.setActionCommand(cmd);
        cbFligthNum.setActionCommand(cmd);

        fillCustomersCombo();
        fillOrders();
        fillFlightsCombo();

        cbCustomers.setActionCommand(null);
        cbOrderNum.setActionCommand(null);
        cbFligthNum.setActionCommand(null);

    }

    
    /**
     * centers the window
     */
    private void centerFrame() {
        if (parent != null) {
            Rectangle r = parent.getBounds();

            Dimension desktopSize = parent.getSize();
            Dimension jInternalFrameSize = this.getSize();
            int width = (desktopSize.width - jInternalFrameSize.width) / 2;
            int height = (desktopSize.height - jInternalFrameSize.height) / 2;
            this.setLocation(width + (int) r.getX(), height + (int) r.getY());

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblFlightNum = new javax.swing.JLabel();
        cbFligthNum = new javax.swing.JComboBox();
        lblOrderNum = new javax.swing.JLabel();
        cbOrderNum = new javax.swing.JComboBox();
        lblFlightNum2 = new javax.swing.JLabel();
        cbCustomers = new javax.swing.JComboBox();
        btnTickest = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            @Override
			public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
			public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
			public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosing(evt);
            }
            @Override
			public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
			public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
			public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            @Override
			public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        lblFlightNum.setText("Select Flight:");

        cbFligthNum.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFligthNumActionPerformed(evt);
            }
        });

        lblOrderNum.setText("Select Order:");

        cbOrderNum.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOrderNumActionPerformed(evt);
            }
        });

        lblFlightNum2.setText("Select Customer:");

        cbCustomers.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCustomersActionPerformed(evt);
            }
        });

        btnTickest.setText("Show Tickets");
        btnTickest.addActionListener(new java.awt.event.ActionListener() {
            @Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTickestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(lblOrderNum, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cbOrderNum, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblFlightNum2)
                        .addGap(18, 18, 18)
                        .addComponent(cbCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(32, 32, 32)
                .addComponent(lblFlightNum)
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnTickest)
                    .addComponent(cbFligthNum, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFlightNum2)
                            .addComponent(cbCustomers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblOrderNum)
                            .addComponent(cbOrderNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblFlightNum)
                        .addComponent(cbFligthNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                .addComponent(btnTickest)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameClosing(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosing
        // TODO add your handling code here:
        if (parent != null) {

            MyInternalFrame theFrame = ((MyInternalFrame) parent);
            theFrame.changeWindowButtons(true);
            theFrame.setGlassPane(theFrame.getDisabledGlassPane());
            theFrame.getDisabledGlassPane().deactivate();

        }
    }//GEN-LAST:event_formInternalFrameClosing

    private void cbOrderNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOrderNumActionPerformed
        // TODO add your handling code here:
        if (evt.getActionCommand() != null && evt.getActionCommand().equals(cmd)) {
            return;
        }

        fillFlightsCombo();

    }//GEN-LAST:event_cbOrderNumActionPerformed

    private void cbCustomersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCustomersActionPerformed
        // TODO add your handling code here:
        if (evt.getActionCommand() != null && evt.getActionCommand().equals(cmd)) {
            return;
        }

        fillOrders();
        fillFlightsCombo();
    }//GEN-LAST:event_cbCustomersActionPerformed

    private void cbFligthNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFligthNumActionPerformed
        // TODO add your handling code here:
        if (evt.getActionCommand() != null && evt.getActionCommand().equals(cmd)) {
            return;
        }

        if (fligthNumber > 0) {

            flight = MainClass.getIfly().getFlights().get(fligthNumber);
        } else {
            int flightNum = Integer.parseInt(((ComboItem) cbFligthNum.getSelectedItem()).getValue());
            flight = MainClass.getIfly().getFlights().get(flightNum);
        }

    }//GEN-LAST:event_cbFligthNumActionPerformed

    private void btnTickestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTickestActionPerformed
        // TODO add your handling code here:

        if (cbCustomers.getModel().getSize() <= 0) {
            shoMissingDataMsg("Customers are missing");
            return;
        }

        if (cbOrderNum.getModel().getSize() <= 0) {
            shoMissingDataMsg("Orders are missing");
            return;
        }

        if (cbFligthNum.getModel().getSize() <= 0) {
            shoMissingDataMsg("Fligts are missing");
            return;
        }

        int orderNum, flightNum;
        String customerPass;
        orderNum = Integer.parseInt(((ComboItem) cbOrderNum.getSelectedItem()).getValue());
        flightNum = Integer.parseInt(((ComboItem) cbFligthNum.getSelectedItem()).getValue());
        customerPass = ((ComboItem) cbCustomers.getSelectedItem()).getValue();
        //Flight f = MainClass.getIfly().getFlights().get(flightNum);

        JDesktopPane desk = this.getDesktopPane();

        if (desk != null) {
            JInternalFrame[] frames = desk.getAllFrames();
            for (JInternalFrame frame : frames) {
                if (frame.getTitle().equals(title)) {
                    MyInternalFrame theFrame = (MyInternalFrame) frame;
                    theFrame.changeWindowButtons(false);

                    theFrame.setGlassPane(theFrame.getDisabledGlassPane());
                    theFrame.getDisabledGlassPane().activate("Please wait");
                }
            }

            ViewFlightTickets newFrame
                    = new ViewFlightTickets("View Flight Ticket - Flight No. " + flight.getFlightNumber(), selectedUserType, this, flight, orderNum, customerPass);
            newFrame.setVisible(true);
            child = newFrame;
            try {
                desk.add(child);
                child.setSelected(true);

            } catch (java.beans.PropertyVetoException e) {
            }

        }
    }//GEN-LAST:event_btnTickestActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTickest;
    private javax.swing.JComboBox cbCustomers;
    private javax.swing.JComboBox cbFligthNum;
    private javax.swing.JComboBox cbOrderNum;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblFlightNum;
    private javax.swing.JLabel lblFlightNum2;
    private javax.swing.JLabel lblOrderNum;
    // End of variables declaration//GEN-END:variables

    /**
     * fill {@link #cbCustomers}}
     */
    private void fillCustomersCombo() {
        HelperClass.fillCustomersCombo(this, cbCustomers, true);

    }

    /**
     * fill {@link #cbOrderNum}}
     */
    private void fillOrders() {
        String custPassport;
        if (cbCustomers.getModel().getSize() > 0) {
            custPassport = ((ComboItem) cbCustomers.getSelectedItem()).getValue();
            Customer c = MainClass.getIfly().getCustomers().get(custPassport);
            HelperClass.fillOrdersCombo(this, cbOrderNum, c);

        }
    }

    /**
     * fill {@link #cbFligthNum}}
     */
    private void fillFlightsCombo() {
        int orderNum;
        if (cbOrderNum.getModel().getSize() > 0) {
            orderNum = Integer.parseInt(((ComboItem) cbOrderNum.getSelectedItem()).getValue());
            HelperClass.getFlightsForSelectedOrder(this, cbFligthNum, orderNum);

            //cbFligthNum.setSelectedItem(0);
            int flightNum = Integer.parseInt(((ComboItem) cbFligthNum.getSelectedItem()).getValue());
            flight = MainClass.getIfly().getFlights().get(flightNum);

        }
    }

}
